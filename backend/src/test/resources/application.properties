spring.application.name=backend

# =========================
# DB (MariaDB)
# =========================
spring.datasource.url=jdbc:mariadb://127.0.0.1:3306/specguard
spring.datasource.username=beyond
spring.datasource.password=eeeeee
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect

# =========================
# JWT
# =========================
spring.jwt.secret=vgncbvnvncvbcvbnvdsfgfeeddsdasdczxc

# Jwt
app.jwt.access-ttl=900000
app.jwt.refresh-ttl=1209600000
app.jwt.invite-ttl=604800000

# Redis Prefix
app.redis.prefix.refresh=specguard:refresh:
app.redis.prefix.blacklist=specguard:blacklist:

# =========================
# SendGrid
# =========================
sendgrid.api.key=${SENDGRID_API_KEY}
sendgrid.mail.from=dyungwoo3600@gmail.com
sendgrid.mail.from-name=Amicitia
invite.base-url=http://localhost:5173/signup/invite
# =========================
# OAuth2 (??)
# =========================

spring.security.oauth2.client.registration.google.client-id=880566725412-94qnru7uc752f3097les3megl4imntfh.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=eeeeee-eeeeee7OdsyvubypBr-38tWsetNa
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# =========================
# OAuth2 naver
# =========================
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=qKCVeVamuiMJW2H1U_9q
spring.security.oauth2.client.registration.naver.client-secret=eeeeeBEgUV
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,birthday,birthyear,mobile
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# =========================
# Redis
# =========================
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=eeeeee
spring.data.redis.database=1


#==========================
# image storage
#==========================
app.storage.local.base-path=./uploads
app.storage.public-base-url=http://localhost:8080/files
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# =========================
# Scheduling Cleanup
# =========================
app.timezone=Asia/Seoul
app.cleanup.resume.enabled=true
app.cleanup.resume.cron=0 10 3 * * *
app.cleanup.resume.chunk-size=100
app.cleanup.resume.dry-run=false
spring.task.scheduling.pool.size=2


# =========================
# Codef Certificate
# =========================
codef.demo_client_id=32ae51e9-cb2e-4f9d-bd65-12acdb2e23f1
codef.demo_client_secret=31a4679f-bad5-4dfc-857c-4cbd80fd2c6d
codef.public_key=eeeeeeeeeeeeeeee9w0BAQEFAAOCAQ8AMIIBCgKCAQEeeeeeeeeH38uv0a1Dd4U+tlKCB/BciqGHpy1joNcDs0G3P+uyLRrq/aZw6DIT7m/UHzvkTY6MtCk+bpZWbVFetu4r5S4CVsfLyph39/N1cwhlc4MfUg1Cbe97wv22Szq6yPW0ZL+3Qp+Yxa5bY15jDEEG24vckTdBLbN94xr+Yk/fJgyJo3+PJV255JRjbjFXanF/csGbjZVrrXFmgCbbqSqk3yqBm0pNu6y8wqajpQCS1BAgA0/nJ2eg0sVZmje/+xKjn8huoAcO90w7cSEoAJQrt78c2UbQTiIoQ3+ML2dcTRqeK72ssm+K2dOCQjYX6P+ZB22k6ZVabiEOdVFwwIDAQAB


# =========================
# Imap code
# =========================
imap.host=imap.gmail.com
imap.port=993
imap.username=specguard55@gmail.com
imap.password=eeee eeee algh eeee
verify.imap.enabled=true

# =========================
# mail(SMTP)
# =========================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=specguard55@gmail.com
spring.mail.password=eeeeeeeialghgeee
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default-encoding=UTF-8
spring.mail.test-connection=true

app.verify.mail-enabled=true


verify.email.enabled=true



specguard.mail.host=smtp.gmail.com
specguard.mail.port=587
specguard.mail.username=specguard55@gmail.com
specguard.mail.password=eeeeeeeeelghgeee
specguard.mail.auth=true
specguard.mail.starttls=true
specguard.mail.debug=true


#imap.folder=INBOX
#imap.recent-window=120
#verify.imap.poll-ms=3000

# =========================
# Mail verification
# =========================
verify.ttl-seconds=300
verify.max-attempts=5
verify.block-seconds=3600
verify.redis.code-prefix=verif:email:
verify.redis.attempt-prefix=verif:attempt:
verify.redis.attempt-ttl-seconds=3600

# =========================
# Redis ? ??? (verify?)
# =========================
app.redis.prefix.verifyEmail=verif:email:
app.redis.prefix.verifyAttempt=verif:attempt:
app.redis.prefix.verifyBlock=verif:block:
app.redis.prefix.session=3600


management.endpoints.web.exposure.include=beans

app.github.token=ghp_eeeeeeeeeeeemVpVRpgQko8VP6ZKzg1veeee

#verify.receiver.email=specguard55@gmail.com
#verify.receiver.sms=01034696728
#debug=true



logging.level.com.beyond.specguard=DEBUG
logging.level.org.springframework.mail=DEBUG
logging.level.org.springframework.data.redis=DEBUG
logging.level.org.springframework.boot.autoconfigure.mail=DEBUG